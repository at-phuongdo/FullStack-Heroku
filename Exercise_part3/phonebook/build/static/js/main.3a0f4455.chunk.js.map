{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Notification.js","services/person.js","App.js","index.js"],"names":["Filter","searchWord","onSearchWordChange","value","onChange","PersonForm","newName","newNumber","onNameChange","onNumberChange","onAddPhone","onSubmit","type","Person","personToShow","onClickDeletePerson","map","person","key","name","number","onClick","id","Notification","message","errorMessage","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchWord","setMessage","setErrorMessage","useEffect","personService","initialPerson","filter","toLowerCase","includes","event","target","preventDefault","existedPerson","find","window","confirm","returnedPerson","catch","error","setTimeout","n","concat","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a0f4455.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({searchWord, onSearchWordChange}) => {\n  return (\n    <div>\n      Filter shown with <input value={searchWord} onChange={onSearchWordChange}/>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({newName, newNumber, onNameChange, onNumberChange, onAddPhone}) => {\n  return (\n    <form onSubmit={onAddPhone}>\n      <div>\n        <div>Name: <input value={newName} onChange={onNameChange} /></div>\n        <div>Number: <input value={newNumber} onChange={onNumberChange} /></div>\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Person = ({personToShow, onClickDeletePerson}) => {\n  const rows = () =>\n  personToShow.map(person =>\n    <li key={person.name}>{person.name} {person.number}\n      <button onClick={onClickDeletePerson(person.name, person.id)}>Delete</button>\n    </li>\n  )\n\n  return (\n    <ul>\n      {rows()}\n    </ul>\n  )\n}\n\nexport default Person\n","import React from 'react'\nconst Notification = ({ message, errorMessage }) => {\n  if (message !== null) {\n    return (\n      <div className=\"success-message\">\n        {message}\n      </div>\n    )\n  }\n\n  if (errorMessage !== null) {\n    return (\n      <div className=\"error-message\">\n        {errorMessage}\n      </div>\n    )\n  }\n\n  return null\n}\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = 'https://phonebook-validation.herokuapp.com/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Person from './components/Person'\nimport Notification from './components/Notification'\nimport personService from './services/person'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchWord, setSearchWord] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPerson => {\n        setPersons(initialPerson)\n      })\n  }, [])\n\n  const addPhone = (event) => {\n    event.preventDefault()\n    const newObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const existedPerson = persons.find(person => person.name === newName)\n\n    if (!!existedPerson) {\n      const isUpdate = window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)\n\n      if (isUpdate) {\n        personService\n        .update(existedPerson.id, newObject)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== existedPerson.id ? person : returnedPerson))\n        })\n        .catch(error => {\n          setErrorMessage(`Person '${existedPerson.name}' was already removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n          setPersons(persons.filter(n => n.id !== existedPerson.id))\n        })\n      }\n    } else if (newName !== '' && newNumber !== '') {\n      personService\n        .create(newObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setMessage(\n            `Added '${returnedPerson.name}'`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          setErrorMessage(error.response.data.error)\n        })\n    } else {\n      alert('Please input')\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchWorldChange = (event) => {\n    setSearchWord(event.target.value)\n  }\n\n  const handleDeletePerson = (name, id) => () => {\n    const isDelete = window.confirm(`Delete ${name}?`)\n    if (isDelete) {\n      personService\n      .deletePerson(id)\n      .then(returnedPerson => {\n        setPersons(persons.filter(person => person.id !== id ))\n        setNewName('')\n      })\n    }\n  }\n\n  const personToShow = persons.filter(person => person.name.toLowerCase().includes(searchWord.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} errorMessage={errorMessage} />\n      <Filter searchWord={searchWord} onSearchWordChange={handleSearchWorldChange} />\n      <h2>Add a new</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        onNameChange={handleNameChange}\n        onNumberChange={handleNumberChange}\n        onAddPhone={addPhone}\n      />\n      <h2>Numbers</h2>\n      <Person personToShow={personToShow} onClickDeletePerson={handleDeletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}